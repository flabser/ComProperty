<?xml version="1.0" encoding="windows-1251"?>
<rule type="handler" id="filling_report">
    <rununderuser source="macro">CURRENT_USER</rununderuser>
    <trigger>provider</trigger>
    <scheduler>
        <mininterval>5</mininterval>
    </scheduler>
    <waitresponse>true</waitresponse>
    <showfile>true</showfile>
    <script><![CDATA[
	String doHandler(_Session ses, Map<String, String[]> formData){
		try{
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy");
            SimpleDateFormat sqlDateFormat = new SimpleDateFormat("yyyy-MM-dd");
            def cdb = ses.getCurrentDatabase();
            String reportName = formData.get("id")[0];
            String datefrom = "";
            String dateto = "";
            String formatdatefrom = "";
            String formatdateto = "";
            String rangePropType = "";
            String contractnum = "";
            String balanceholder = "";

            contractnum = formData.get("contractnum")[0];
            balanceholder = formData.get("balanceholder")[0];

             //Определяем формат будущего отчета и способ его отображения
            String typeReportFile = "";
            String openReportWith = "";
            typeReportFile = formData.get("typefilereport")[0];
            //openReportWith = formData.get("openreportwith")[0];

            System.out.println("Filling report...");
            JRFileVirtualizer virtualizer = new JRFileVirtualizer(10, new File("").absolutePath + "\\webapps\\PropertyLeasingSubsystem\\reports");
            Map parameters = new HashMap();
            parameters.put("CONTRACTNUM", contractnum);
            parameters.put("BALANCEHOLDER", balanceholder);
            parameters.put("HOST", ses.getAppURL());
            parameters.put(JRParameter.REPORT_VIRTUALIZER, virtualizer);
            println(parameters.each { it.key + " " + it.value });

            String host = ses.getGlobalSettings().dbURL;
            String uName = ses.getGlobalSettings().dbUserName;
            String uPass = ses.getGlobalSettings().dbPassword;
            String dName = ses.getGlobalSettings().driver;
            Driver driver = (Driver) Class.forName(dName).newInstance();
            DriverManager.registerDriver(driver);
            Connection conn = DriverManager.getConnection(host, uName, uPass);

            JasperPrint print = JasperFillManager.fillReport(JasperCompileManager.compileReportToFile(new File("").getAbsolutePath() + "\\webapps\\PropertyLeasingSubsystem\\reports\\templates\\" + reportName + ".jrxml"), parameters, conn);

            JRStyle style = new JRDesignStyle();
            style.setPdfFontName(new File("").absolutePath + "\\webapps\\PropertyLeasingSubsystem\\reports\\templates\\fonts\\tahoma.ttf");
            style.setPdfEncoding("Cp1251");
            style.setPdfEmbedded(true);
            print.setDefaultStyle(style);
            System.out.println("Done!");

            String format = "";
            String app = "";

            switch (typeReportFile) {
                case "1":
                    JasperExportManager.exportReportToPdfFile(print, new File("").getAbsolutePath() + "\\webapps\\PropertyLeasingSubsystem\\reports\\" + reportName + ".pdf");
                    format = "pdf";
                    app = "AcroRd32.exe";
                    break;
                case "2":
                    JExcelApiExporter xlsExporter = new JExcelApiExporter();
                    xlsExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                    xlsExporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, new File("").getAbsolutePath() + "\\webapps\\PropertyLeasingSubsystem\\reports\\" + reportName + ".xls");
                    xlsExporter.exportReport();
                    format = "xls";
                    app = "excel.exe";
                    break;
                case "3":
                    JRHtmlExporter exporter = new JRHtmlExporter();
                    exporter.setParameter(JRHtmlExporterParameter.IMAGES_URI, new File("").getAbsolutePath() + "\\webapps\\PropertyLeasingSubsystem\\reports\\" + reportName + ".html_files\\");
                    exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                    exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, new File("").getAbsolutePath() + "\\webapps\\PropertyLeasingSubsystem\\reports\\" + reportName + ".html");
                    //JasperExportManager.exportReportToHtmlFile(print, new File("").getAbsolutePath() + "\\webapps\\PropertyLeasingSubsystem\\reports\\"+ reportName +".html");
                    exporter.exportReport();
                    format = "html";
                    app = "iexplore.exe";
                    break;
                default:
                    JasperExportManager.exportReportToPdfFile(print, new File("").getAbsolutePath() + "\\webapps\\PropertyLeasingSubsystem\\reports\\" + reportName + ".pdf");
                    format = "pdf";
                    app = "AcroRd32.exe";
                    break;
            }
            virtualizer.cleanup();
            return "${new File("").absolutePath}\\webapps\\PropertyLeasingSubsystem\\reports\\$reportName.$format";
        } catch (Exception e) {
            e.printStackTrace();
        }


    }]]></script>
</rule>
